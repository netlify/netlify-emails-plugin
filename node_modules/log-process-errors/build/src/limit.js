import{emitWarning}from"process";












export const isLimited=function({
previousEvents,
mEmitLimitedWarning,
name,
value})
{
if(isLimitedWarning({name,value})){
return false;
}

const isLimitedEvent=[...previousEvents].length>=MAX_EVENTS;

if(isLimitedEvent){
mEmitLimitedWarning(name);
}

return isLimitedEvent;
};


export const emitLimitedWarning=function(name){
emitWarning(ERROR_MESSAGE(name),ERROR_NAME,ERROR_CODE);
};


const isLimitedWarning=function({name,value={}}){
return(
name==="warning"&&value.name===ERROR_NAME&&value.code===ERROR_CODE);

};

const ERROR_MESSAGE=(name)=>
`Cannot log more than ${MAX_EVENTS} '${name}' until process is restarted`;
const ERROR_NAME="LogProcessErrors";
const ERROR_CODE="TooManyErrors";

const MAX_EVENTS=100;
//# sourceMappingURL=limit.js.map