"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.minimatch = exports.glob = void 0;
const util_1 = require("util");
const glob_1 = __importDefault(require("glob"));
const minimatch_1 = __importDefault(require("minimatch"));
const normalize_path_1 = __importDefault(require("normalize-path"));
const pGlob = (0, util_1.promisify)(glob_1.default);
/**
 * Both glob and minimatch only support unix style slashes in patterns
 * For this reason we wrap them and ensure all patters are always unixified
 * We use `normalize-path` here instead of `unixify` because we do not want to remove drive letters
 */
const glob = function (pattern, options) {
    let normalizedIgnore;
    if (options.ignore) {
        normalizedIgnore =
            typeof options.ignore === 'string'
                ? (0, normalize_path_1.default)(options.ignore)
                : options.ignore.map((expression) => (0, normalize_path_1.default)(expression));
    }
    return pGlob((0, normalize_path_1.default)(pattern), { ...options, ignore: normalizedIgnore });
};
exports.glob = glob;
const minimatch = function (target, pattern, options) {
    return (0, minimatch_1.default)(target, (0, normalize_path_1.default)(pattern), options);
};
exports.minimatch = minimatch;
//# sourceMappingURL=matching.js.map