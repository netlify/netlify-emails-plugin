"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.parseVersion = exports.getNodeSupportMatrix = exports.getNodeVersion = exports.DEFAULT_NODE_VERSION = void 0;
// Must match the default version used in Bitballoon.
exports.DEFAULT_NODE_VERSION = 16;
const VERSION_REGEX = /(nodejs)?(\d+)\.x/;
const getNodeVersion = (configVersion) => { var _a; return (_a = (0, exports.parseVersion)(configVersion)) !== null && _a !== void 0 ? _a : exports.DEFAULT_NODE_VERSION; };
exports.getNodeVersion = getNodeVersion;
const getNodeSupportMatrix = (configVersion) => {
    const versionNumber = (0, exports.getNodeVersion)(configVersion);
    return {
        esm: versionNumber >= 14,
    };
};
exports.getNodeSupportMatrix = getNodeSupportMatrix;
// Takes a string in the format defined by the `NodeVersion` type and returns
// the numeric major version (e.g. "nodejs14.x" => 14).
const parseVersion = (input) => {
    if (input === undefined) {
        return;
    }
    const match = input.match(VERSION_REGEX);
    if (match === null) {
        return;
    }
    const version = Number.parseInt(match[2]);
    if (Number.isNaN(version)) {
        return;
    }
    return version;
};
exports.parseVersion = parseVersion;
/* eslint-enable no-magic-numbers */
//# sourceMappingURL=node_version.js.map